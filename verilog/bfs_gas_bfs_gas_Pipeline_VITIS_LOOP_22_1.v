// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bfs_gas_bfs_gas_Pipeline_VITIS_LOOP_22_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_nodes,
        distances_0_address0,
        distances_0_ce0,
        distances_0_we0,
        distances_0_d0,
        visited_1_address1,
        visited_1_ce1,
        visited_1_we1,
        visited_1_d1,
        distances_1_address0,
        distances_1_ce0,
        distances_1_we0,
        distances_1_d0,
        distances_2_address0,
        distances_2_ce0,
        distances_2_we0,
        distances_2_d0,
        distances_3_address0,
        distances_3_ce0,
        distances_3_we0,
        distances_3_d0,
        distances_4_address0,
        distances_4_ce0,
        distances_4_we0,
        distances_4_d0,
        distances_5_address0,
        distances_5_ce0,
        distances_5_we0,
        distances_5_d0,
        distances_6_address0,
        distances_6_ce0,
        distances_6_we0,
        distances_6_d0,
        distances_7_address0,
        distances_7_ce0,
        distances_7_we0,
        distances_7_d0,
        distances_8_address0,
        distances_8_ce0,
        distances_8_we0,
        distances_8_d0,
        distances_9_address0,
        distances_9_ce0,
        distances_9_we0,
        distances_9_d0,
        distances_10_address0,
        distances_10_ce0,
        distances_10_we0,
        distances_10_d0,
        distances_11_address0,
        distances_11_ce0,
        distances_11_we0,
        distances_11_d0,
        distances_12_address0,
        distances_12_ce0,
        distances_12_we0,
        distances_12_d0,
        distances_13_address0,
        distances_13_ce0,
        distances_13_we0,
        distances_13_d0,
        distances_14_address0,
        distances_14_ce0,
        distances_14_we0,
        distances_14_d0,
        distances_15_address0,
        distances_15_ce0,
        distances_15_we0,
        distances_15_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_nodes;
output  [15:0] distances_0_address0;
output   distances_0_ce0;
output   distances_0_we0;
output  [31:0] distances_0_d0;
output  [19:0] visited_1_address1;
output   visited_1_ce1;
output   visited_1_we1;
output  [0:0] visited_1_d1;
output  [15:0] distances_1_address0;
output   distances_1_ce0;
output   distances_1_we0;
output  [31:0] distances_1_d0;
output  [15:0] distances_2_address0;
output   distances_2_ce0;
output   distances_2_we0;
output  [31:0] distances_2_d0;
output  [15:0] distances_3_address0;
output   distances_3_ce0;
output   distances_3_we0;
output  [31:0] distances_3_d0;
output  [15:0] distances_4_address0;
output   distances_4_ce0;
output   distances_4_we0;
output  [31:0] distances_4_d0;
output  [15:0] distances_5_address0;
output   distances_5_ce0;
output   distances_5_we0;
output  [31:0] distances_5_d0;
output  [15:0] distances_6_address0;
output   distances_6_ce0;
output   distances_6_we0;
output  [31:0] distances_6_d0;
output  [15:0] distances_7_address0;
output   distances_7_ce0;
output   distances_7_we0;
output  [31:0] distances_7_d0;
output  [15:0] distances_8_address0;
output   distances_8_ce0;
output   distances_8_we0;
output  [31:0] distances_8_d0;
output  [15:0] distances_9_address0;
output   distances_9_ce0;
output   distances_9_we0;
output  [31:0] distances_9_d0;
output  [15:0] distances_10_address0;
output   distances_10_ce0;
output   distances_10_we0;
output  [31:0] distances_10_d0;
output  [15:0] distances_11_address0;
output   distances_11_ce0;
output   distances_11_we0;
output  [31:0] distances_11_d0;
output  [15:0] distances_12_address0;
output   distances_12_ce0;
output   distances_12_we0;
output  [31:0] distances_12_d0;
output  [15:0] distances_13_address0;
output   distances_13_ce0;
output   distances_13_we0;
output  [31:0] distances_13_d0;
output  [15:0] distances_14_address0;
output   distances_14_ce0;
output   distances_14_we0;
output  [31:0] distances_14_d0;
output  [15:0] distances_15_address0;
output   distances_15_ce0;
output   distances_15_we0;
output  [31:0] distances_15_d0;

reg ap_idle;
reg distances_0_ce0;
reg distances_0_we0;
reg visited_1_ce1;
reg visited_1_we1;
reg distances_1_ce0;
reg distances_1_we0;
reg distances_2_ce0;
reg distances_2_we0;
reg distances_3_ce0;
reg distances_3_we0;
reg distances_4_ce0;
reg distances_4_we0;
reg distances_5_ce0;
reg distances_5_we0;
reg distances_6_ce0;
reg distances_6_we0;
reg distances_7_ce0;
reg distances_7_we0;
reg distances_8_ce0;
reg distances_8_we0;
reg distances_9_ce0;
reg distances_9_we0;
reg distances_10_ce0;
reg distances_10_we0;
reg distances_11_ce0;
reg distances_11_we0;
reg distances_12_ce0;
reg distances_12_we0;
reg distances_13_ce0;
reg distances_13_we0;
reg distances_14_ce0;
reg distances_14_we0;
reg distances_15_ce0;
reg distances_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1027_fu_370_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln1027_fu_382_p1;
wire   [63:0] zext_ln25_fu_397_p1;
reg   [19:0] i_V_fu_106;
wire   [19:0] add_ln840_fu_376_p2;
wire    ap_loop_init;
reg   [19:0] ap_sig_allocacmp_i_V_1;
wire   [3:0] trunc_ln25_fu_417_p1;
wire   [31:0] zext_ln1027_1_fu_366_p1;
wire   [15:0] lshr_ln1_fu_387_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

bfs_gas_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln1027_fu_370_p2 == 1'd0)) begin
            i_V_fu_106 <= add_ln840_fu_376_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_106 <= 20'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_V_1 = 20'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_106;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_0_ce0 = 1'b1;
    end else begin
        distances_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd0))) begin
        distances_0_we0 = 1'b1;
    end else begin
        distances_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_10_ce0 = 1'b1;
    end else begin
        distances_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd10))) begin
        distances_10_we0 = 1'b1;
    end else begin
        distances_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_11_ce0 = 1'b1;
    end else begin
        distances_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd11))) begin
        distances_11_we0 = 1'b1;
    end else begin
        distances_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_12_ce0 = 1'b1;
    end else begin
        distances_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd12))) begin
        distances_12_we0 = 1'b1;
    end else begin
        distances_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_13_ce0 = 1'b1;
    end else begin
        distances_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd13))) begin
        distances_13_we0 = 1'b1;
    end else begin
        distances_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_14_ce0 = 1'b1;
    end else begin
        distances_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd14))) begin
        distances_14_we0 = 1'b1;
    end else begin
        distances_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_15_ce0 = 1'b1;
    end else begin
        distances_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd15))) begin
        distances_15_we0 = 1'b1;
    end else begin
        distances_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_1_ce0 = 1'b1;
    end else begin
        distances_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd1))) begin
        distances_1_we0 = 1'b1;
    end else begin
        distances_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_2_ce0 = 1'b1;
    end else begin
        distances_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd2))) begin
        distances_2_we0 = 1'b1;
    end else begin
        distances_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_3_ce0 = 1'b1;
    end else begin
        distances_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd3))) begin
        distances_3_we0 = 1'b1;
    end else begin
        distances_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_4_ce0 = 1'b1;
    end else begin
        distances_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd4))) begin
        distances_4_we0 = 1'b1;
    end else begin
        distances_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_5_ce0 = 1'b1;
    end else begin
        distances_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd5))) begin
        distances_5_we0 = 1'b1;
    end else begin
        distances_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_6_ce0 = 1'b1;
    end else begin
        distances_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd6))) begin
        distances_6_we0 = 1'b1;
    end else begin
        distances_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_7_ce0 = 1'b1;
    end else begin
        distances_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd7))) begin
        distances_7_we0 = 1'b1;
    end else begin
        distances_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_8_ce0 = 1'b1;
    end else begin
        distances_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd8))) begin
        distances_8_we0 = 1'b1;
    end else begin
        distances_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        distances_9_ce0 = 1'b1;
    end else begin
        distances_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln25_fu_417_p1 == 4'd9))) begin
        distances_9_we0 = 1'b1;
    end else begin
        distances_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        visited_1_ce1 = 1'b1;
    end else begin
        visited_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_370_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        visited_1_we1 = 1'b1;
    end else begin
        visited_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln840_fu_376_p2 = (ap_sig_allocacmp_i_V_1 + 20'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign distances_0_address0 = zext_ln25_fu_397_p1;

assign distances_0_d0 = 32'd4294967295;

assign distances_10_address0 = zext_ln25_fu_397_p1;

assign distances_10_d0 = 32'd4294967295;

assign distances_11_address0 = zext_ln25_fu_397_p1;

assign distances_11_d0 = 32'd4294967295;

assign distances_12_address0 = zext_ln25_fu_397_p1;

assign distances_12_d0 = 32'd4294967295;

assign distances_13_address0 = zext_ln25_fu_397_p1;

assign distances_13_d0 = 32'd4294967295;

assign distances_14_address0 = zext_ln25_fu_397_p1;

assign distances_14_d0 = 32'd4294967295;

assign distances_15_address0 = zext_ln25_fu_397_p1;

assign distances_15_d0 = 32'd4294967295;

assign distances_1_address0 = zext_ln25_fu_397_p1;

assign distances_1_d0 = 32'd4294967295;

assign distances_2_address0 = zext_ln25_fu_397_p1;

assign distances_2_d0 = 32'd4294967295;

assign distances_3_address0 = zext_ln25_fu_397_p1;

assign distances_3_d0 = 32'd4294967295;

assign distances_4_address0 = zext_ln25_fu_397_p1;

assign distances_4_d0 = 32'd4294967295;

assign distances_5_address0 = zext_ln25_fu_397_p1;

assign distances_5_d0 = 32'd4294967295;

assign distances_6_address0 = zext_ln25_fu_397_p1;

assign distances_6_d0 = 32'd4294967295;

assign distances_7_address0 = zext_ln25_fu_397_p1;

assign distances_7_d0 = 32'd4294967295;

assign distances_8_address0 = zext_ln25_fu_397_p1;

assign distances_8_d0 = 32'd4294967295;

assign distances_9_address0 = zext_ln25_fu_397_p1;

assign distances_9_d0 = 32'd4294967295;

assign icmp_ln1027_fu_370_p2 = ((zext_ln1027_1_fu_366_p1 == num_nodes) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_387_p4 = {{ap_sig_allocacmp_i_V_1[19:4]}};

assign trunc_ln25_fu_417_p1 = ap_sig_allocacmp_i_V_1[3:0];

assign visited_1_address1 = zext_ln1027_fu_382_p1;

assign visited_1_d1 = 1'd0;

assign zext_ln1027_1_fu_366_p1 = ap_sig_allocacmp_i_V_1;

assign zext_ln1027_fu_382_p1 = ap_sig_allocacmp_i_V_1;

assign zext_ln25_fu_397_p1 = lshr_ln1_fu_387_p4;

endmodule //bfs_gas_bfs_gas_Pipeline_VITIS_LOOP_22_1
